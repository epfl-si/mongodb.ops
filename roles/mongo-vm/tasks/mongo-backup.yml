- tags: always
  include_vars: mongo-vars.yml

- name: Lock database
  community.mongodb.mongodb_shell:
    login_user: "{{ mongodb_db_inventory.admin.user }}"
    login_password: "{{ mongodb_db_inventory.admin.password }}"
    eval: "db.fsyncLock()"
  register: _mongo_is_locked
  when: vip_active

- name: Test lockCount
  debug:
    msg: "{{ _mongo_is_locked.transformed_output.lockCount }}"
  when: vip_active

- name: Backup database
  ansible.builtin.shell: mongodump --uri='mongodb://{{ mongodb_db_inventory.admin.user }}:{{ mongodb_db_inventory.admin.password }}@{{ inventory_hostname }}' --out {{ mongodb_backup_path }}
  when: vip_active

- name: Unlock database
  community.mongodb.mongodb_shell:
    login_user: "{{ mongodb_db_inventory.admin.user }}"
    login_password: "{{ mongodb_db_inventory.admin.password }}"
    eval: "db.fsyncUnlock()"
  when: (vip_active and _mongo_is_locked.transformed_output.lockCount >= 1) or ('mongo.unlock' in ansible_run_tags)
  tags:
    - mongo.unlock

- name: Backup {{ mongodb_storage_path }} in s3
  environment:
    RESTIC_PASSWORD: "{{ mongodb_s3.restic_password }}"
    AWS_ACCESS_KEY_ID: "{{ mongodb_s3.aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ mongodb_s3.aws_secret_access_key }}"
  ansible.builtin.shell: restic -r {{ mongodb_s3_bucket_path }} backup {{ mongodb_backup_path }}
  when: vip_active

- name: Create 'week' and 'month' backups directories
  ansible.builtin.file:
    path: "{{ mongodb_backups_path }}/{{ item }}"
    state: directory
  loop:
    - week
    - month
  when: vip_active
  tags:
    - mongo.cron

- name: Manage backups cron file under /etc/cron.d
  ansible.builtin.cron:
    name: "{{ item.name }}"
    minute: "0"
    hour: "{{ item.hour }}"
    weekday: "{{ item.weekday }}"
    user: root
    job: "{{ item.job }}"
    cron_file: "ansible_mongodump"
    state: "{{ 'present' if vip_active else 'absent' }}"
  loop:
    - { name: 'MongoDB 4 times daily backups', hour: '*/6', weekday: "*",
        job: "export CURRENT_DATE=$(date +'\\%Y\\%m\\%d-\\%H\\%M\\%S');
        YUMINTERACTIVE=0
        mongodump --uri='mongodb://{{ mongodb_db_inventory.admin.user }}:{{ mongodb_db_inventory.admin.password }}@{{ inventory_hostname}}' --out {{ mongodb_backups_path }}/$CURRENT_DATE &&
        tar --exclude='*.tar.gz' -czvf {{ mongodb_backups_path }}/$CURRENT_DATE.tar.gz {{ mongodb_backups_path }}/$CURRENT_DATE &&
        rm -rf {{ mongodb_backups_path }}/$CURRENT_DATE;" }
    - { name: 'MongoDB keep 1 backup per day for a week in /week', hour: '22', weekday: "*",
        job : "mv `find {{ mongodb_backups_path }} -maxdepth 1 -type f -mtime +1 -name '*.gz' | head -1` {{ mongodb_backups_path }}/week/ &&
        find {{ mongodb_backups_path }} -maxdepth 1 -type f -mtime +1 -name '*.gz' -delete" }
    - { name: 'MongoDB keep 1 backup per week in /month', hour: '23', weekday: "0",
        job : "mv `find {{ mongodb_backups_path }}/week -maxdepth 1 -type f -mtime +7 -name '*.gz' | head -1` {{ mongodb_backups_path }}/month/ &&
        find {{ mongodb_backups_path }}/week -maxdepth 1 -type f -mtime +7 -name '*.gz' -delete" }
    - { name: 'MongoDB remove backups older than 1 year from /month', hour: '3', weekday: "*",
        job : "find /srv/mongo/backups/month -maxdepth 1 -type f -mtime +365 -name '*.gz' -delete" }
  tags:
    - mongo.cron
