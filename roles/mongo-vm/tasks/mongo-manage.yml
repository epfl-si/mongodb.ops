# Manage MongoDB (users, collections)

- tags: always
  include_vars: mongo-vars.yml

- name: Create users for MongoDB databases
  community.mongodb.mongodb_user:
    login_user: "{{ mongodb_db_inventory.admin.user }}"
    login_password: "{{ mongodb_db_inventory.admin.password }}"
    login_port: "{{ mongodb_port }}"
    database: "{{ item.key }}"
    name: "{{ item.value.user }}"
    password: "{{ item.value.password }}"
    state: present
    roles: dbOwner
  when: item.key != 'admin'
  loop: "{{ mongodb_db_inventory | dict2items }}"

- name: Update users wuth ip filter authenticationRestrictions
  community.mongodb.mongodb_shell:
    login_user: "{{ mongodb_db_inventory.admin.user }}"
    login_password: "{{ mongodb_db_inventory.admin.password }}"
    db: "admin"
    eval: "db.system.users.update( { _id: '{{ item.key }}.{{ item.value.user }}' },{$set: {'authenticationRestrictions': [{ clientSource: {{ item.value.ip_filtered }} }]}})"
  loop: "{{ mongodb_db_inventory | dict2items }}"
  when:
    - item.value.ip_filtered is defined
    - item.value.ip_filtered | length > 0

